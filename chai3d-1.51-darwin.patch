diff -ruN chai3d-orig/darwin/Makefile chai3d/darwin/Makefile
--- chai3d-orig/darwin/Makefile	1969-12-31 19:00:00.000000000 -0500
+++ chai3d/darwin/Makefile	2007-03-21 19:40:32.000000000 -0400
@@ -0,0 +1,55 @@
+# CHAI makefile for Darwin
+# Stephen Sinclair
+# March 2007
+#
+# To disable Phantom support and compile away SensAble's libraries, you need to
+# add -D_DISABLE_PHANTOM_SUPPORT to the DEFS line.  If you don't do this, the
+# SensAble runtime may be required to run your applications.
+
+OBJECTS = ../src/collisions/CCollisionAABB.o ../src/collisions/CCollisionAABBTree.o ../src/collisions/CCollisionBrute.o ../src/collisions/CCollisionSpheres.o ../src/collisions/CCollisionSpheresGeometry.o ../src/collisions/CGenericCollision.o ../src/devices/CDeltaDevices.o ../src/devices/CGenericDevice.o ../src/devices/CPhantomDevices.o ../src/files/CFileLoader3DS.o ../src/files/CFileLoaderBMP.o ../src/files/CFileLoaderOBJ.o ../src/files/CFileLoaderTGA.o ../src/files/CImageLoader.o ../src/files/CMeshLoader.o ../src/forces/CGenericPointForceAlgo.o ../src/forces/CPotentialFieldForceAlgo.o ../src/forces/CProxyPointForceAlgo.o ../src/graphics/CColor.o ../src/graphics/CDraw3D.o ../src/graphics/CMacrosGL.o ../src/graphics/CMaterial.o ../src/graphics/CTexture2D.o ../src/graphics/CTriangle.o ../src/graphics/CVertex.o ../src/math/CMaths.o ../src/math/CMatrix3d.o ../src/math/CString.o ../src/math/CVector3d.o ../src/scenegraph/CCamera.o ../src/scenegraph/CGenericObject.o ../src/scenegraph/CGenericPotentialField.o ../src/scenegraph/CLight.o ../src/scenegraph/CMesh.o ../src/scenegraph/CShapeSphere.o ../src/scenegraph/CShapeTorus.o ../src/scenegraph/CWorld.o ../src/timers/CPrecisionClock.o ../src/timers/CPrecisionTimer.o ../src/tools/CDelta3dofPointer.o ../src/tools/CGeneric3dofPointer.o ../src/tools/CGenericTool.o ../src/tools/CMeta3dofPointer.o ../src/tools/CPhantom3dofPointer.o ../src/widgets/CBitmap.o ../src/widgets/CFont.o ../src/widgets/CLabelPanel.o ../src/widgets/CPanel.o ../src/devices/PhantomDriverLinux.o
+
+SOURCES = $(OBJECTS:.o=.cpp)
+INCLUDE = -I../src/graphics -I../src/collisions -I../src/devices -I../src/display -I../src/files -I../src/forces -I../src/math -I../src/scenegraph -I../src/timers -I../src/tools -I../src/widgets -I../include/dhd -IGL -IGLUT
+
+LOCALOBJS = $(notdir $(OBJECTS) )
+
+# Optionally add -D_DISABLE_PHANTOM_SUPPORT to compile away SensAble's libraries
+# We exclude the Delta device because libdhd.a is not available on Darwin
+DEFS = -D_POSIX -D_MAX_PATH=260 -D_DISABLE_PHANTOM_SUPPORT -DEXCLUDE_DELTA
+
+CC   = g++ -c $(DEFS)
+CFLAGS = -O3 $(INCLUDE)
+LD   = g++ -o
+AR   = ar rc
+RANLIB = ranlib
+LIBS = -L. -L../lib/darwin -lglut -lgl -lglu -ldhd -framework OpenGL
+
+all: chai3d
+
+# On Darwin, the OpenGL and GLUT headers are in the corresponding frameworks' Headers folder.
+# However, since the headers do not reside in a folder called "GL", this causes a problem.
+# Here we create some symlinks which fix the problem, but it seems like there should be a better way.
+# Likely that would mean using XCode and creating a proper Framework.
+headers:
+	if ! ( [ -d GL ] && [ -d GLUT ] ); then \
+		mkdir GL; \
+		mkdir GLUT; \
+		ln -s /System/Library/Frameworks/OpenGL.framework/Headers GL/GL; \
+		ln -s /System/Library/Frameworks/GLUT.framework/Headers GLUT/GL; \
+	fi
+
+%.o: %.cpp 
+	$(CC) $(CFLAGS) $<
+  
+# Actual target and dependencies
+chai3d: headers $(OBJECTS)
+	$(AR) libchai3d_darwin.a $(LOCALOBJS) 
+	$(RANLIB) libchai3d_darwin.a
+	-mkdir ../lib/darwin
+	mv libchai3d_darwin.a ../lib/darwin/
+	@echo "compilation done"
+
+# Target deleting unwanted files
+clean:
+	\rm -fr *.o *~ libchai3d_darwin.a core GL GLUT
+
diff -ruN chai3d-orig/include/CCollisionSpheresGeometry.h chai3d/include/CCollisionSpheresGeometry.h
--- chai3d-orig/include/CCollisionSpheresGeometry.h	2006-07-31 08:50:16.000000000 -0400
+++ chai3d/include/CCollisionSpheresGeometry.h	2007-03-21 15:13:28.000000000 -0400
@@ -29,8 +29,10 @@
 #include <list>
 #include <map>
 #include <math.h>
+#ifdef WIN32
 #include <windows.h>
-#include <gl/gl.h>
+#endif
+#include <GL/gl.h>
 //---------------------------------------------------------------------------
 using std::map;
 using std::less;
Binary files chai3d-orig/lib/darwin/libchai3d_darwin.a and chai3d/lib/darwin/libchai3d_darwin.a differ
Binary files chai3d-orig/lib/linux/libchai3d_linux.a and chai3d/lib/linux/libchai3d_linux.a differ
diff -ruN chai3d-orig/src/collisions/CCollisionSpheresGeometry.h chai3d/src/collisions/CCollisionSpheresGeometry.h
--- chai3d-orig/src/collisions/CCollisionSpheresGeometry.h	2006-07-31 08:50:16.000000000 -0400
+++ chai3d/src/collisions/CCollisionSpheresGeometry.h	2007-03-21 19:21:34.000000000 -0400
@@ -29,8 +29,10 @@
 #include <list>
 #include <map>
 #include <math.h>
+#ifdef WIN32
 #include <windows.h>
-#include <gl/gl.h>
+#endif
+#include <GL/gl.h>
 //---------------------------------------------------------------------------
 using std::map;
 using std::less;
diff -ruN chai3d-orig/src/devices/CDeltaDevices.cpp chai3d/src/devices/CDeltaDevices.cpp
--- chai3d-orig/src/devices/CDeltaDevices.cpp	2006-05-16 11:30:28.000000000 -0400
+++ chai3d/src/devices/CDeltaDevices.cpp	2007-03-21 19:37:12.000000000 -0400
@@ -36,6 +36,17 @@
 const double OMEGA_DEVICE_MAXIMUM_FORCE        = 12.0;  // [newtons]
 //---------------------------------------------------------------------------
 
+#ifdef EXCLUDE_DELTA
+
+cDeltaDevice::cDeltaDevice(unsigned int a_deviceNumber) {}
+cDeltaDevice::~cDeltaDevice() {}
+int cDeltaDevice::open() { return 0; }
+int cDeltaDevice::close() { return 0; }
+int cDeltaDevice::initialize(const bool a_resetEncoders) { return 0; }
+int cDeltaDevice::command(int a_command, void* a_data) { return 0; }
+
+#else
+
 #ifdef _WIN32
 
 HINSTANCE dhdDLL = NULL;
@@ -393,3 +404,4 @@
 }
 
 
+#endif
