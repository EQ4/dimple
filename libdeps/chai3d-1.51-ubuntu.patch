diff -ruw chai3d.orig/include/CCollisionSpheresGeometry.h chai3d/include/CCollisionSpheresGeometry.h
--- chai3d.orig/include/CCollisionSpheresGeometry.h	2006-07-31 08:50:16.000000000 -0400
+++ chai3d/include/CCollisionSpheresGeometry.h	2007-03-22 20:41:55.000000000 -0400
@@ -29,8 +29,10 @@
 #include <list>
 #include <map>
 #include <math.h>
+#ifdef WIN32
 #include <windows.h>
-#include <gl/gl.h>
+#endif
+#include <GL/gl.h>
 //---------------------------------------------------------------------------
 using std::map;
 using std::less;
diff -ruw chai3d.orig/include/CCollisionSpheres.h chai3d/include/CCollisionSpheres.h
--- chai3d.orig/include/CCollisionSpheres.h	2006-07-31 16:29:48.000000000 -0400
+++ chai3d/include/CCollisionSpheres.h	2007-03-22 20:41:41.000000000 -0400
@@ -41,7 +41,7 @@
 #include <list>
 #include <queue>
 #include <vector>
-#include "gl/glu.h"
+#include "GL/glu.h"
 //---------------------------------------------------------------------------
 // TYPEDEFS:
 //! Pointer to list of shape primitives.
@@ -132,7 +132,7 @@
     //! Draw the collision sphere for this node, if at the given depth.
     virtual void draw(int a_depth = -1) = 0;
     //! Calculate the distance between the two given collision spheres.
-    static bool cCollisionSpheresSphere::computeCollision(cCollisionSpheresSphere *a_sa,
+    static bool computeCollision(cCollisionSpheresSphere *a_sa,
                 cGenericObject*& a_colObject, cTriangle*& a_colTriangle,
                 cVector3d& a_colPoint, double& a_colSquareDistance,
                 cCollisionSpheresSphere *a_sb);
@@ -184,7 +184,7 @@
     //! Draw the collision sphere if at the given depth.
     void draw(int a_depth);
     //! Check for intersection between given nodes, the first an internal node.
-    static bool cCollisionSpheresNode::computeCollision(cCollisionSpheresNode *a_sa,
+    static bool computeCollision(cCollisionSpheresNode *a_sa,
             cGenericObject*& a_colObject, cTriangle*& a_colTriangle,
             cVector3d& a_colPoint, double& a_colSquareDistance,
             cCollisionSpheresSphere *a_sb);
@@ -228,7 +228,7 @@
     //! Draw the collision sphere if at the given depth.
     void draw(int a_depth);
     //! Check for intersection between the two given leaf nodes.
-    static bool cCollisionSpheresLeaf::computeCollision(cCollisionSpheresLeaf *a_sa,
+    static bool computeCollision(cCollisionSpheresLeaf *a_sa,
             cGenericObject*& a_colObject, cTriangle*& a_colTriangle,
             cVector3d& a_colPoint, double& a_colSquareDistance,
             cCollisionSpheresLeaf *a_sb);
diff -ruw chai3d.orig/include/CVertex.h chai3d/include/CVertex.h
--- chai3d.orig/include/CVertex.h	2006-08-03 10:10:16.000000000 -0400
+++ chai3d/include/CVertex.h	2007-03-22 20:32:41.000000000 -0400
@@ -50,7 +50,7 @@
 		\param	a_z	 Z component.
     */
     //-----------------------------------------------------------------------
-    cVertex::cVertex(const double a_x=0.0, const double a_y=0.0, const double a_z=0.0)
+    cVertex(const double a_x=0.0, const double a_y=0.0, const double a_z=0.0)
         : m_localPos(a_x, a_y, a_z), m_globalPos(a_x, a_y, a_z), m_normal(0.0, 0.0, 1.0),
         m_index(-1), m_allocated(false), m_nTriangles(0)
     {}
Only in chai3d/lib/linux: libchai3d_linux.a
diff -ruw chai3d.orig/src/collisions/CCollisionSpheresGeometry.h chai3d/src/collisions/CCollisionSpheresGeometry.h
--- chai3d.orig/src/collisions/CCollisionSpheresGeometry.h	2006-07-31 08:50:16.000000000 -0400
+++ chai3d/src/collisions/CCollisionSpheresGeometry.h	2007-03-22 20:32:41.000000000 -0400
@@ -29,8 +29,10 @@
 #include <list>
 #include <map>
 #include <math.h>
+#ifdef WIN32
 #include <windows.h>
-#include <gl/gl.h>
+#endif
+#include <GL/gl.h>
 //---------------------------------------------------------------------------
 using std::map;
 using std::less;
diff -ruw chai3d.orig/src/collisions/CCollisionSpheres.h chai3d/src/collisions/CCollisionSpheres.h
--- chai3d.orig/src/collisions/CCollisionSpheres.h	2006-07-31 16:29:48.000000000 -0400
+++ chai3d/src/collisions/CCollisionSpheres.h	2007-03-22 20:32:41.000000000 -0400
@@ -41,7 +41,7 @@
 #include <list>
 #include <queue>
 #include <vector>
-#include "gl/glu.h"
+#include "GL/glu.h"
 //---------------------------------------------------------------------------
 // TYPEDEFS:
 //! Pointer to list of shape primitives.
@@ -132,7 +132,7 @@
     //! Draw the collision sphere for this node, if at the given depth.
     virtual void draw(int a_depth = -1) = 0;
     //! Calculate the distance between the two given collision spheres.
-    static bool cCollisionSpheresSphere::computeCollision(cCollisionSpheresSphere *a_sa,
+    static bool computeCollision(cCollisionSpheresSphere *a_sa,
                 cGenericObject*& a_colObject, cTriangle*& a_colTriangle,
                 cVector3d& a_colPoint, double& a_colSquareDistance,
                 cCollisionSpheresSphere *a_sb);
@@ -184,7 +184,7 @@
     //! Draw the collision sphere if at the given depth.
     void draw(int a_depth);
     //! Check for intersection between given nodes, the first an internal node.
-    static bool cCollisionSpheresNode::computeCollision(cCollisionSpheresNode *a_sa,
+    static bool computeCollision(cCollisionSpheresNode *a_sa,
             cGenericObject*& a_colObject, cTriangle*& a_colTriangle,
             cVector3d& a_colPoint, double& a_colSquareDistance,
             cCollisionSpheresSphere *a_sb);
@@ -228,7 +228,7 @@
     //! Draw the collision sphere if at the given depth.
     void draw(int a_depth);
     //! Check for intersection between the two given leaf nodes.
-    static bool cCollisionSpheresLeaf::computeCollision(cCollisionSpheresLeaf *a_sa,
+    static bool computeCollision(cCollisionSpheresLeaf *a_sa,
             cGenericObject*& a_colObject, cTriangle*& a_colTriangle,
             cVector3d& a_colPoint, double& a_colSquareDistance,
             cCollisionSpheresLeaf *a_sb);
diff -ruw chai3d.orig/src/graphics/CVertex.h chai3d/src/graphics/CVertex.h
--- chai3d.orig/src/graphics/CVertex.h	2006-08-03 10:10:16.000000000 -0400
+++ chai3d/src/graphics/CVertex.h	2007-03-22 20:32:41.000000000 -0400
@@ -50,7 +50,7 @@
 		\param	a_z	 Z component.
     */
     //-----------------------------------------------------------------------
-    cVertex::cVertex(const double a_x=0.0, const double a_y=0.0, const double a_z=0.0)
+    cVertex(const double a_x=0.0, const double a_y=0.0, const double a_z=0.0)
         : m_localPos(a_x, a_y, a_z), m_globalPos(a_x, a_y, a_z), m_normal(0.0, 0.0, 1.0),
         m_index(-1), m_allocated(false), m_nTriangles(0)
     {}
