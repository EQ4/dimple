diff -riu -x'*.sln' -x'*.vcproj' -x'*.htm' -x'*.ncb' -x'*.suo' liblo-0.23.orig/lo/lo.h liblo-0.23/lo/lo.h
--- liblo-0.23.orig/lo/lo.h	2007-04-05 18:50:51.609375000 -0400
+++ liblo-0.23/lo/lo.h	2007-04-05 18:45:25.781250000 -0400
@@ -237,6 +237,12 @@
  */
 EXPORT lo_server lo_server_thread_get_server(lo_server_thread st);
 
+/**
+ * \brief Set the server's dispatch callback function.
+ */
+void lo_server_thread_set_dispatch_callback(lo_server_thread st,
+                                            lo_dispatch_method_callback callback);
+
 /** \brief Return true if there are scheduled events (eg. from bundles) waiting
  * to be dispatched by the thread */
 EXPORT int lo_server_thread_events_pending(lo_server_thread st);
diff -riu -x'*.sln' -x'*.vcproj' -x'*.htm' -x'*.ncb' -x'*.suo' liblo-0.23.orig/lo/lo_lowlevel.h liblo-0.23/lo/lo_lowlevel.h
--- liblo-0.23.orig/lo/lo_lowlevel.h	2007-04-05 18:50:51.625000000 -0400
+++ liblo-0.23/lo/lo_lowlevel.h	2007-04-05 18:22:07.125000000 -0400
@@ -484,6 +484,16 @@
 double lo_server_next_event_delay(lo_server s);
 
 /**
+ * \brief Set the server's dispatch callback function.
+ */
+void lo_server_set_dispatch_callback(lo_server s, lo_dispatch_method_callback callback);
+
+/**
+ * \brief Dispatch the given method to registered handler functions.
+ */
+void lo_server_dispatch_method(lo_server s, const char *path, char *types, void *data);
+
+/**
  * \brief Return the protocol portion of an OSC URL, eg. udp, tcp.
  *
  * This library uses OSC URLs of the form: osc.prot://hostname:port/path if the
diff -riu -x'*.sln' -x'*.vcproj' -x'*.htm' -x'*.ncb' -x'*.suo' liblo-0.23.orig/lo/lo_types.h liblo-0.23/lo/lo_types.h
--- liblo-0.23.orig/lo/lo_types.h	2005-04-25 17:46:47.000000000 -0400
+++ liblo-0.23/lo/lo_types.h	2007-04-05 18:22:06.984375000 -0400
@@ -123,6 +123,14 @@
 				 lo_arg **argv, int argc, lo_message msg,
 				 void *user_data);
 
+/**
+ * \brief A callback function used to intercept method calls before they
+ * are dispatched to a handler.  This function must make a call to
+ * lo_server_dispatch_method() with the arguments provided.
+ */
+typedef void (*lo_dispatch_method_callback)(void* s, const char *path,
+                                            char *types, void *data);
+
 #ifdef __cplusplus
 }
 #endif
diff -riu -x'*.sln' -x'*.vcproj' -x'*.htm' -x'*.ncb' -x'*.suo' liblo-0.23.orig/src/lo_types_internal.h liblo-0.23/src/lo_types_internal.h
--- liblo-0.23.orig/src/lo_types_internal.h	2005-08-11 05:07:29.000000000 -0400
+++ liblo-0.23/src/lo_types_internal.h	2007-04-05 16:53:10.031250000 -0400
@@ -53,6 +53,9 @@
 	struct _lo_method *next;
 } *lo_method;
 
+typedef void (*lo_dispatch_method_callback)(void* s, const char *path,
+                                            char *types, void *data);
+
 typedef struct _lo_server {
 	int	                 socket;
 	struct addrinfo         *ai;
@@ -65,6 +68,7 @@
 	void		        *queued;
 	struct sockaddr_storage  addr;
 	socklen_t 	         addr_len;
+    lo_dispatch_method_callback dispatch_callback;
 } *lo_server;
 
 typedef struct _lo_server_thread {
diff -riu -x'*.sln' -x'*.vcproj' -x'*.htm' -x'*.ncb' -x'*.suo' liblo-0.23.orig/src/server.c liblo-0.23/src/server.c
--- liblo-0.23.orig/src/server.c	2007-04-05 18:50:51.687500000 -0400
+++ liblo-0.23/src/server.c	2007-04-05 18:42:51.515625000 -0400
@@ -165,6 +165,7 @@
     s->path = NULL;
     s->queued = NULL;
     s->socket = -1;
+    s->dispatch_callback = NULL;
 
     memset(&hints, 0, sizeof(hints));
 
@@ -619,6 +620,15 @@
 static void dispatch_method(lo_server s, const char *path, char *types,
 			    void *data)
 {
+    if (s->dispatch_callback)
+        s->dispatch_callback(s, path, types, data);
+    else
+        lo_server_dispatch_method(s, path, types, data);
+}
+
+void lo_server_dispatch_method(lo_server s, const char *path, char *types,
+			    void *data)
+{
     int argc = strlen(types);
     lo_arg **argv = NULL;
     lo_method it;
@@ -1062,6 +1072,13 @@
     }
 }
 
+void lo_server_set_dispatch_callback(lo_server s,
+                                     lo_dispatch_method_callback callback)
+{
+    s->dispatch_callback = callback;
+}
+
+
 static int lo_can_coerce_spec(const char *a, const char *b)
 {
     unsigned int i;
diff -riu -x'*.sln' -x'*.vcproj' -x'*.htm' -x'*.ncb' -x'*.suo' liblo-0.23.orig/src/server_thread.c liblo-0.23/src/server_thread.c
--- liblo-0.23.orig/src/server_thread.c	2007-04-05 18:50:51.703125000 -0400
+++ liblo-0.23/src/server_thread.c	2007-04-05 18:44:29.125000000 -0400
@@ -129,6 +129,12 @@
     return lo_server_events_pending(st->s);
 }
 
+void lo_server_thread_set_dispatch_callback(lo_server_thread st,
+                                            lo_dispatch_method_callback callback)
+{
+    lo_server_set_dispatch_callback(st->s, callback);
+}
+
 static void thread_func(void *data)
 {
     lo_server_thread st = (lo_server_thread)data;
